{"ast":null,"code":"import { hasTouchableProperty, parseTransformProp } from '.';\nimport { resolve } from '../../lib/resolve';\nimport { resolveAssetUri } from '../../lib/resolveAssetUri';\n/**\n * `react-native-svg` supports additional props that aren't defined in the spec.\n * This function replaces them in a spec conforming manner.\n *\n * @param {WebShape} self Instance given to us.\n * @param {Object?} props Optional overridden props given to us.\n * @returns {Object} Cleaned props object.\n * @private\n */\nexport const prepare = (self, props = self.props) => {\n  const {\n    transform,\n    origin,\n    originX,\n    originY,\n    fontFamily,\n    fontSize,\n    fontWeight,\n    fontStyle,\n    style,\n    forwardedRef,\n    gradientTransform,\n    patternTransform,\n    onPress,\n    ...rest\n  } = props;\n  const clean = {\n    ...(hasTouchableProperty(props) ? {\n      onStartShouldSetResponder: self.touchableHandleStartShouldSetResponder,\n      onResponderTerminationRequest: self.touchableHandleResponderTerminationRequest,\n      onResponderGrant: self.touchableHandleResponderGrant,\n      onResponderMove: self.touchableHandleResponderMove,\n      onResponderRelease: self.touchableHandleResponderRelease,\n      onResponderTerminate: self.touchableHandleResponderTerminate\n    } : null),\n    ...rest\n  };\n  if (origin != null) {\n    clean['transform-origin'] = origin.toString().replace(',', ' ');\n  } else if (originX != null || originY != null) {\n    clean['transform-origin'] = `${originX || 0} ${originY || 0}`;\n  }\n\n  // we do it like this because setting transform as undefined causes error in web\n  const parsedTransform = parseTransformProp(transform, props);\n  if (parsedTransform) {\n    clean.transform = parsedTransform;\n  }\n  const parsedGradientTransform = parseTransformProp(gradientTransform);\n  if (parsedGradientTransform) {\n    clean.gradientTransform = parsedGradientTransform;\n  }\n  const parsedPatternTransform = parseTransformProp(patternTransform);\n  if (parsedPatternTransform) {\n    clean.patternTransform = parsedPatternTransform;\n  }\n  clean.ref = el => {\n    self.elementRef.current = el;\n    if (typeof forwardedRef === 'function') {\n      forwardedRef(el);\n    } else if (forwardedRef) {\n      forwardedRef.current = el;\n    }\n  };\n  const styles = {};\n  if (fontFamily != null) {\n    styles.fontFamily = fontFamily;\n  }\n  if (fontSize != null) {\n    styles.fontSize = fontSize;\n  }\n  if (fontWeight != null) {\n    styles.fontWeight = fontWeight;\n  }\n  if (fontStyle != null) {\n    styles.fontStyle = fontStyle;\n  }\n  clean.style = resolve(style, styles);\n  if (onPress !== null) {\n    clean.onClick = props.onPress;\n  }\n  if (props.href !== null && props.href !== undefined) {\n    var _resolveAssetUri;\n    clean.href = (_resolveAssetUri = resolveAssetUri(props.href)) === null || _resolveAssetUri === void 0 ? void 0 : _resolveAssetUri.uri;\n  }\n  return clean;\n};","map":{"version":3,"names":["hasTouchableProperty","parseTransformProp","resolve","resolveAssetUri","prepare","self","props","transform","origin","originX","originY","fontFamily","fontSize","fontWeight","fontStyle","style","forwardedRef","gradientTransform","patternTransform","onPress","rest","clean","onStartShouldSetResponder","touchableHandleStartShouldSetResponder","onResponderTerminationRequest","touchableHandleResponderTerminationRequest","onResponderGrant","touchableHandleResponderGrant","onResponderMove","touchableHandleResponderMove","onResponderRelease","touchableHandleResponderRelease","onResponderTerminate","touchableHandleResponderTerminate","toString","replace","parsedTransform","parsedGradientTransform","parsedPatternTransform","ref","el","elementRef","current","styles","onClick","href","undefined","_resolveAssetUri","uri"],"sources":["C:\\Users\\eduar\\Documents\\forforca\\eaddesenvweb\\ead_desenvwebfront\\node_modules\\react-native-svg\\src\\web\\utils\\prepare.ts"],"sourcesContent":["import {\n  GestureResponderEvent,\n  type ImageProps as RNImageProps,\n} from 'react-native';\nimport { BaseProps } from '../types';\nimport { WebShape } from '../WebShape';\nimport { hasTouchableProperty, parseTransformProp } from '.';\nimport { resolve } from '../../lib/resolve';\nimport { NumberProp } from '../../lib/extract/types';\nimport { resolveAssetUri } from '../../lib/resolveAssetUri';\n/**\n * `react-native-svg` supports additional props that aren't defined in the spec.\n * This function replaces them in a spec conforming manner.\n *\n * @param {WebShape} self Instance given to us.\n * @param {Object?} props Optional overridden props given to us.\n * @returns {Object} Cleaned props object.\n * @private\n */\nexport const prepare = <T extends BaseProps>(\n  self: WebShape<T>,\n  props = self.props\n) => {\n  const {\n    transform,\n    origin,\n    originX,\n    originY,\n    fontFamily,\n    fontSize,\n    fontWeight,\n    fontStyle,\n    style,\n    forwardedRef,\n    gradientTransform,\n    patternTransform,\n    onPress,\n    ...rest\n  } = props;\n\n  const clean: {\n    onStartShouldSetResponder?: (e: GestureResponderEvent) => boolean;\n    onResponderMove?: (e: GestureResponderEvent) => void;\n    onResponderGrant?: (e: GestureResponderEvent) => void;\n    onResponderRelease?: (e: GestureResponderEvent) => void;\n    onResponderTerminate?: (e: GestureResponderEvent) => void;\n    onResponderTerminationRequest?: (e: GestureResponderEvent) => boolean;\n    onClick?: (e: GestureResponderEvent) => void;\n    transform?: string;\n    gradientTransform?: string;\n    patternTransform?: string;\n    'transform-origin'?: string;\n    href?: RNImageProps['source'] | string | null;\n    style?: object;\n    ref?: unknown;\n  } = {\n    ...(hasTouchableProperty(props)\n      ? {\n          onStartShouldSetResponder:\n            self.touchableHandleStartShouldSetResponder,\n          onResponderTerminationRequest:\n            self.touchableHandleResponderTerminationRequest,\n          onResponderGrant: self.touchableHandleResponderGrant,\n          onResponderMove: self.touchableHandleResponderMove,\n          onResponderRelease: self.touchableHandleResponderRelease,\n          onResponderTerminate: self.touchableHandleResponderTerminate,\n        }\n      : null),\n    ...rest,\n  };\n\n  if (origin != null) {\n    clean['transform-origin'] = origin.toString().replace(',', ' ');\n  } else if (originX != null || originY != null) {\n    clean['transform-origin'] = `${originX || 0} ${originY || 0}`;\n  }\n\n  // we do it like this because setting transform as undefined causes error in web\n  const parsedTransform = parseTransformProp(transform, props);\n  if (parsedTransform) {\n    clean.transform = parsedTransform;\n  }\n  const parsedGradientTransform = parseTransformProp(gradientTransform);\n  if (parsedGradientTransform) {\n    clean.gradientTransform = parsedGradientTransform;\n  }\n  const parsedPatternTransform = parseTransformProp(patternTransform);\n  if (parsedPatternTransform) {\n    clean.patternTransform = parsedPatternTransform;\n  }\n\n  clean.ref = (el: SVGElement | null) => {\n    self.elementRef.current = el;\n    if (typeof forwardedRef === 'function') {\n      forwardedRef(el);\n    } else if (forwardedRef) {\n      forwardedRef.current = el;\n    }\n  };\n\n  const styles: {\n    fontStyle?: string;\n    fontFamily?: string;\n    fontSize?: NumberProp;\n    fontWeight?: NumberProp;\n  } = {};\n\n  if (fontFamily != null) {\n    styles.fontFamily = fontFamily;\n  }\n  if (fontSize != null) {\n    styles.fontSize = fontSize;\n  }\n  if (fontWeight != null) {\n    styles.fontWeight = fontWeight;\n  }\n  if (fontStyle != null) {\n    styles.fontStyle = fontStyle;\n  }\n  clean.style = resolve(style, styles);\n  if (onPress !== null) {\n    clean.onClick = props.onPress;\n  }\n  if (props.href !== null && props.href !== undefined) {\n    clean.href = resolveAssetUri(props.href)?.uri;\n  }\n  return clean;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}