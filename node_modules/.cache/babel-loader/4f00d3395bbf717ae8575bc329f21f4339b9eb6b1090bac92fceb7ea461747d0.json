{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eduar\\\\Documents\\\\forforca\\\\eaddesenvweb\\\\ead_desenvwebfront\\\\src\\\\paginas\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport palavras from \"../palavras\";\nimport \"../App.css\"; // Verifique se o arquivo App.css está na mesma pasta que App.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [palavra, setPalavra] = useState(\"\");\n  const [tentativas, setTentativas] = useState(6);\n  const [letrasTentadas, setLetrasTentadas] = useState([]);\n  const [mensagem, setMensagem] = useState(\"\");\n  const [gameOver, setGameOver] = useState(false); // Controle do estado do jogo\n  const inputRef = useRef(null); // Ref para o input\n\n  const escolherPalavraAleatoria = () => {\n    const indexAleatorio = Math.floor(Math.random() * palavras.length);\n    return palavras[indexAleatorio];\n  };\n\n  // Inicializa o jogo com uma palavra aleatória\n  useEffect(() => {\n    setPalavra(escolherPalavraAleatoria());\n  }, []);\n  const handleTentativa = () => {\n    const letra = inputRef.current.value.toLowerCase();\n    inputRef.current.value = \"\"; // Limpa o input\n\n    if (letrasTentadas.includes(letra) || letra.length === 0 || gameOver) {\n      setMensagem(\"Você já tentou essa letra ou não digitou nada!\");\n      return;\n    }\n    setLetrasTentadas(prev => [...prev, letra]);\n    if (!palavra.includes(letra)) {\n      setTentativas(prev => prev - 1);\n      if (tentativas - 1 === 0) {\n        setMensagem(`Você perdeu! A palavra era \"${palavra}\".`);\n        setGameOver(true); // Fim de jogo\n      } else {\n        setMensagem(\"Letra incorreta! Tente outra.\");\n      }\n    } else {\n      const palavraOculta = palavra.split(\"\").every(l => letrasTentadas.includes(l) || l === letra);\n      if (palavraOculta) {\n        setMensagem(`Parabéns! Você adivinhou a palavra: \"${palavra}\".`);\n        setGameOver(true); // Fim de jogo\n      } else {\n        setMensagem(\"Boa! Você acertou uma letra.\");\n      }\n    }\n  };\n  const handleReset = () => {\n    setTentativas(6);\n    setLetrasTentadas([]);\n    setMensagem(\"\");\n    setGameOver(false);\n    setPalavra(escolherPalavraAleatoria());\n  };\n  const palavraOculta = palavra.split(\"\").map(letra => letrasTentadas.includes(letra) ? letra : \"_\").join(\" \");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bem-vindo ao Jogo da Forca!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"word\",\n      children: palavraOculta\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tentativas restantes: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: tentativas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Letras j\\xE1 tentadas: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: letrasTentadas.join(\", \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), !gameOver && tentativas > 0 && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: inputRef,\n      maxLength: \"1\",\n      placeholder: \"Digite uma letra\",\n      className: \"input-letter\",\n      disabled: gameOver,\n      onKeyDown: e => {\n        if (e.key === \"Enter\") {\n          handleTentativa(); // Chama a função de tentativa quando \"Enter\" for pressionado\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), !gameOver && tentativas > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTentativa,\n      disabled: gameOver,\n      children: \"Tentar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: !gameOver ? \"desistir\" : null // Aplica o id \"desistir\" quando o jogo está ativo\n      ,\n      onClick: gameOver ? handleReset : () => setGameOver(true),\n      children: gameOver ? \"Tentar novamente\" : \"Desistir\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"rXODIAbWFh1tc3BNd/IL60zUgVM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","palavras","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","palavra","setPalavra","tentativas","setTentativas","letrasTentadas","setLetrasTentadas","mensagem","setMensagem","gameOver","setGameOver","inputRef","escolherPalavraAleatoria","indexAleatorio","Math","floor","random","length","handleTentativa","letra","current","value","toLowerCase","includes","prev","palavraOculta","split","every","l","handleReset","map","join","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","ref","maxLength","placeholder","disabled","onKeyDown","e","key","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/eduar/Documents/forforca/eaddesenvweb/ead_desenvwebfront/src/paginas/HomePage.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport palavras from \"../palavras\";\r\nimport \"../App.css\"; // Verifique se o arquivo App.css está na mesma pasta que App.js\r\n\r\nconst App = () => {\r\n  const [palavra, setPalavra] = useState(\"\");\r\n  const [tentativas, setTentativas] = useState(6);\r\n  const [letrasTentadas, setLetrasTentadas] = useState([]);\r\n  const [mensagem, setMensagem] = useState(\"\");\r\n  const [gameOver, setGameOver] = useState(false); // Controle do estado do jogo\r\n  const inputRef = useRef(null); // Ref para o input\r\n\r\n  const escolherPalavraAleatoria = () => {\r\n    const indexAleatorio = Math.floor(Math.random() * palavras.length);\r\n    return palavras[indexAleatorio];\r\n  };\r\n\r\n  // Inicializa o jogo com uma palavra aleatória\r\n  useEffect(() => {\r\n    setPalavra(escolherPalavraAleatoria());\r\n  }, []);\r\n\r\n  const handleTentativa = () => {\r\n    const letra = inputRef.current.value.toLowerCase();\r\n    inputRef.current.value = \"\"; // Limpa o input\r\n\r\n    if (letrasTentadas.includes(letra) || letra.length === 0 || gameOver) {\r\n      setMensagem(\"Você já tentou essa letra ou não digitou nada!\");\r\n      return;\r\n    }\r\n\r\n    setLetrasTentadas((prev) => [...prev, letra]);\r\n\r\n    if (!palavra.includes(letra)) {\r\n      setTentativas((prev) => prev - 1);\r\n      if (tentativas - 1 === 0) {\r\n        setMensagem(`Você perdeu! A palavra era \"${palavra}\".`);\r\n        setGameOver(true); // Fim de jogo\r\n      } else {\r\n        setMensagem(\"Letra incorreta! Tente outra.\");\r\n      }\r\n    } else {\r\n      const palavraOculta = palavra\r\n        .split(\"\")\r\n        .every((l) => letrasTentadas.includes(l) || l === letra);\r\n      if (palavraOculta) {\r\n        setMensagem(`Parabéns! Você adivinhou a palavra: \"${palavra}\".`);\r\n        setGameOver(true); // Fim de jogo\r\n      } else {\r\n        setMensagem(\"Boa! Você acertou uma letra.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setTentativas(6);\r\n    setLetrasTentadas([]);\r\n    setMensagem(\"\");\r\n    setGameOver(false);\r\n    setPalavra(escolherPalavraAleatoria());\r\n  };\r\n\r\n  const palavraOculta = palavra\r\n    .split(\"\")\r\n    .map((letra) => (letrasTentadas.includes(letra) ? letra : \"_\"))\r\n    .join(\" \");\r\n\r\n  return (\r\n    <>\r\n      <h1>Bem-vindo ao Jogo da Forca!</h1>\r\n      <p className=\"word\">{palavraOculta}</p>\r\n      <p>\r\n        Tentativas restantes: <span>{tentativas}</span>\r\n      </p>\r\n      <p>\r\n        Letras já tentadas: <span>{letrasTentadas.join(\", \")}</span>\r\n      </p>\r\n      {!gameOver && tentativas > 0 && (\r\n        <input\r\n          type=\"text\"\r\n          ref={inputRef}\r\n          maxLength=\"1\"\r\n          placeholder=\"Digite uma letra\"\r\n          className=\"input-letter\"\r\n          disabled={gameOver}\r\n          onKeyDown={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              handleTentativa(); // Chama a função de tentativa quando \"Enter\" for pressionado\r\n            }\r\n          }}\r\n        />\r\n      )}\r\n      {!gameOver && tentativas > 0 && (\r\n        <button onClick={handleTentativa} disabled={gameOver}>\r\n          Tentar\r\n        </button>\r\n      )}\r\n      <button\r\n        id={!gameOver ? \"desistir\" : null} // Aplica o id \"desistir\" quando o jogo está ativo\r\n        onClick={gameOver ? handleReset : () => setGameOver(true)}\r\n      >\r\n        {gameOver ? \"Tentar novamente\" : \"Desistir\"}\r\n      </button>\r\n      <p className=\"message\">{mensagem}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}