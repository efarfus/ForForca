{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eduar\\\\Documents\\\\forforca\\\\eaddesenvweb\\\\ead_desenvwebfront\\\\src\\\\paginas\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './App.css'; // Verifique se o arquivo App.css está na mesma pasta que App.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [palavra] = useState('javascript'); // Palavra para adivinhar\n  const [tentativas, setTentativas] = useState(6);\n  const [letrasTentadas, setLetrasTentadas] = useState([]);\n  const [mensagem, setMensagem] = useState('');\n  const inputRef = useRef(null); // Ref para o input\n\n  const handleTentativa = () => {\n    const letra = inputRef.current.value.toLowerCase();\n    inputRef.current.value = ''; // Limpa o input\n\n    if (letrasTentadas.includes(letra) || letra.length === 0) {\n      setMensagem('Você já tentou essa letra ou não digitou nada!');\n      return;\n    }\n    setLetrasTentadas(prev => [...prev, letra]);\n    if (!palavra.includes(letra)) {\n      setTentativas(prev => prev - 1);\n      if (tentativas - 1 === 0) {\n        setMensagem(`Você perdeu! A palavra era \"${palavra}\".`);\n      } else {\n        setMensagem('Letra incorreta! Tente outra.');\n      }\n    } else {\n      const palavraOculta = palavra.split('').every(l => letrasTentadas.includes(l) || l === letra);\n      if (palavraOculta) {\n        setMensagem(`Parabéns! Você adivinhou a palavra: \"${palavra}\".`);\n      } else {\n        setMensagem('Boa! Você acertou uma letra.');\n      }\n    }\n  };\n  const palavraOculta = palavra.split('').map(letra => letrasTentadas.includes(letra) ? letra : '_').join(' ');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bem-vindo ao Jogo da Forca!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"word\",\n      children: palavraOculta\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tentativas restantes: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: tentativas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Letras j\\xE1 tentadas: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: letrasTentadas.join(', ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: inputRef,\n      maxLength: \"1\",\n      placeholder: \"Digite uma letra\",\n      className: \"input-letter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTentativa,\n      children: \"Tentar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"nnVMsmFg3qZniV7o3/uvytjxC5k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","App","_s","palavra","tentativas","setTentativas","letrasTentadas","setLetrasTentadas","mensagem","setMensagem","inputRef","handleTentativa","letra","current","value","toLowerCase","includes","length","prev","palavraOculta","split","every","l","map","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","maxLength","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/eduar/Documents/forforca/eaddesenvweb/ead_desenvwebfront/src/paginas/HomePage.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './App.css'; // Verifique se o arquivo App.css está na mesma pasta que App.js\r\n\r\nconst App = () => {\r\n    const [palavra] = useState('javascript'); // Palavra para adivinhar\r\n    const [tentativas, setTentativas] = useState(6);\r\n    const [letrasTentadas, setLetrasTentadas] = useState([]);\r\n    const [mensagem, setMensagem] = useState('');\r\n    const inputRef = useRef(null); // Ref para o input\r\n\r\n    const handleTentativa = () => {\r\n        const letra = inputRef.current.value.toLowerCase();\r\n        inputRef.current.value = ''; // Limpa o input\r\n\r\n        if (letrasTentadas.includes(letra) || letra.length === 0) {\r\n            setMensagem('Você já tentou essa letra ou não digitou nada!');\r\n            return;\r\n        }\r\n\r\n        setLetrasTentadas(prev => [...prev, letra]);\r\n\r\n        if (!palavra.includes(letra)) {\r\n            setTentativas(prev => prev - 1);\r\n            if (tentativas - 1 === 0) {\r\n                setMensagem(`Você perdeu! A palavra era \"${palavra}\".`);\r\n            } else {\r\n                setMensagem('Letra incorreta! Tente outra.');\r\n            }\r\n        } else {\r\n            const palavraOculta = palavra.split('').every(l => letrasTentadas.includes(l) || l === letra);\r\n            if (palavraOculta) {\r\n                setMensagem(`Parabéns! Você adivinhou a palavra: \"${palavra}\".`);\r\n            } else {\r\n                setMensagem('Boa! Você acertou uma letra.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const palavraOculta = palavra.split('').map(letra => (letrasTentadas.includes(letra) ? letra : '_')).join(' ');\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Bem-vindo ao Jogo da Forca!</h1>\r\n            <p className=\"word\">{palavraOculta}</p>\r\n            <p>Tentativas restantes: <span>{tentativas}</span></p>\r\n            <p>Letras já tentadas: <span>{letrasTentadas.join(', ')}</span></p>\r\n            <input \r\n                type=\"text\" \r\n                ref={inputRef} \r\n                maxLength=\"1\" \r\n                placeholder=\"Digite uma letra\" \r\n                className=\"input-letter\"\r\n            />\r\n            <button onClick={handleTentativa}>Tentar</button>\r\n            <p className=\"message\">{mensagem}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}