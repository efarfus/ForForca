{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eduar\\\\Documents\\\\forforca\\\\eaddesenvweb\\\\ead_desenvwebfront\\\\src\\\\paginas\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport palavras from \"../palavras\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [palavra, setPalavra] = useState(\"\");\n  const [tentativas, setTentativas] = useState(6);\n  const [letrasTentadas, setLetrasTentadas] = useState([]);\n  const [mensagem, setMensagem] = useState(\"\");\n  const [gameOver, setGameOver] = useState(false);\n  const inputRef = useRef(null);\n  const escolherPalavraAleatoria = () => {\n    const indexAleatorio = Math.floor(Math.random() * palavras.length);\n    return palavras[indexAleatorio];\n  };\n  useEffect(() => {\n    setPalavra(escolherPalavraAleatoria());\n  }, []);\n  const validarLetra = letra => {\n    return /^[a-zA-Z]$/.test(letra);\n  };\n  const handleTentativa = () => {\n    const letra = inputRef.current.value.toLowerCase();\n    inputRef.current.value = \"\";\n    if (!validarLetra(letra) || letrasTentadas.includes(letra)) {\n      setMensagem(\"Você já tentou essa letra ou não digitou uma letra válida!\");\n      return;\n    }\n    setLetrasTentadas(prev => [...prev, letra]);\n    if (!palavra.includes(letra)) {\n      setTentativas(prev => prev - 1);\n      if (tentativas - 1 === 0) {\n        setMensagem(`Você perdeu! A palavra era \"${palavra}\".`);\n        setGameOver(true);\n      } else {\n        setMensagem(\"Letra incorreta! Tente outra.\");\n      }\n    } else {\n      const palavraOculta = palavra.split(\"\").every(l => letrasTentadas.includes(l) || l === letra);\n      if (palavraOculta) {\n        setMensagem(`Parabéns! Você adivinhou a palavra: \"${palavra}\".`);\n        setGameOver(true);\n      } else {\n        setMensagem(\"Boa! Você acertou uma letra.\");\n      }\n    }\n    inputRef.current.focus(); // Mantém o foco no input após a tentativa\n  };\n\n  const handleReset = () => {\n    setTentativas(6);\n    setLetrasTentadas([]);\n    setMensagem(\"\");\n    setGameOver(false);\n    setPalavra(escolherPalavraAleatoria());\n    inputRef.current.focus(); // Mantém o foco no input após o reset\n  };\n\n  const palavraOculta = palavra.split(\"\").map(letra => letrasTentadas.includes(letra) ? letra : \"_\").join(\" \");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"tentativas-restantes\",\n      children: [\"Tentativas restantes: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: tentativas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), !gameOver && tentativas > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forca-visual\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forca\",\n        children: [tentativas < 6 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cabeca boneco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 32\n        }, this), tentativas < 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"corpo boneco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 32\n        }, this), tentativas < 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"braco-esquerdo boneco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 32\n        }, this), tentativas < 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"braco-direito boneco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 32\n        }, this), tentativas < 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"perna-esquerda boneco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 32\n        }, this), tentativas < 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"perna-direita boneco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"word\",\n      children: palavraOculta\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"letras-tentadas\",\n      children: [\"Letras tentadas: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: letrasTentadas.join(\", \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), !gameOver && tentativas > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: inputRef,\n        maxLength: \"1\",\n        placeholder: \"Digite uma letra\",\n        className: \"input-letter\",\n        onKeyDown: e => {\n          if (e.key === \"Enter\") {\n            handleTentativa();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTentativa,\n        children: \"Tentar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: !gameOver ? \"desistir\" : null,\n      onClick: gameOver ? handleReset : () => {\n        setGameOver(true);\n        setMensagem(\"\");\n      },\n      children: gameOver ? \"Tentar novamente\" : \"Desistir desta palavra\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rXODIAbWFh1tc3BNd/IL60zUgVM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","palavras","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","palavra","setPalavra","tentativas","setTentativas","letrasTentadas","setLetrasTentadas","mensagem","setMensagem","gameOver","setGameOver","inputRef","escolherPalavraAleatoria","indexAleatorio","Math","floor","random","length","validarLetra","letra","test","handleTentativa","current","value","toLowerCase","includes","prev","palavraOculta","split","every","l","focus","handleReset","map","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","maxLength","placeholder","onKeyDown","e","key","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/eduar/Documents/forforca/eaddesenvweb/ead_desenvwebfront/src/paginas/HomePage.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport palavras from \"../palavras\";\r\nimport \"../App.css\";\r\n\r\nconst App = () => {\r\n  const [palavra, setPalavra] = useState(\"\");\r\n  const [tentativas, setTentativas] = useState(6);\r\n  const [letrasTentadas, setLetrasTentadas] = useState([]);\r\n  const [mensagem, setMensagem] = useState(\"\");\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const inputRef = useRef(null);\r\n\r\n  const escolherPalavraAleatoria = () => {\r\n    const indexAleatorio = Math.floor(Math.random() * palavras.length);\r\n    return palavras[indexAleatorio];\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPalavra(escolherPalavraAleatoria());\r\n  }, []);\r\n\r\n  const validarLetra = (letra) => {\r\n    return /^[a-zA-Z]$/.test(letra);\r\n  };\r\n\r\n  const handleTentativa = () => {\r\n    const letra = inputRef.current.value.toLowerCase();\r\n    inputRef.current.value = \"\";\r\n\r\n    if (!validarLetra(letra) || letrasTentadas.includes(letra)) {\r\n      setMensagem(\"Você já tentou essa letra ou não digitou uma letra válida!\");\r\n      return;\r\n    }\r\n\r\n    setLetrasTentadas((prev) => [...prev, letra]);\r\n\r\n    if (!palavra.includes(letra)) {\r\n      setTentativas((prev) => prev - 1);\r\n      if (tentativas - 1 === 0) {\r\n        setMensagem(`Você perdeu! A palavra era \"${palavra}\".`);\r\n        setGameOver(true);\r\n      } else {\r\n        setMensagem(\"Letra incorreta! Tente outra.\");\r\n      }\r\n    } else {\r\n      const palavraOculta = palavra\r\n        .split(\"\")\r\n        .every((l) => letrasTentadas.includes(l) || l === letra);\r\n      if (palavraOculta) {\r\n        setMensagem(`Parabéns! Você adivinhou a palavra: \"${palavra}\".`);\r\n        setGameOver(true);\r\n      } else {\r\n        setMensagem(\"Boa! Você acertou uma letra.\");\r\n      }\r\n    }\r\n    \r\n    inputRef.current.focus(); // Mantém o foco no input após a tentativa\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setTentativas(6);\r\n    setLetrasTentadas([]);\r\n    setMensagem(\"\");\r\n    setGameOver(false);\r\n    setPalavra(escolherPalavraAleatoria());\r\n    inputRef.current.focus(); // Mantém o foco no input após o reset\r\n  };\r\n\r\n  const palavraOculta = palavra\r\n    .split(\"\")\r\n    .map((letra) => (letrasTentadas.includes(letra) ? letra : \"_\"))\r\n    .join(\" \");\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <p className=\"tentativas-restantes\">\r\n        Tentativas restantes: <span>{tentativas}</span>\r\n      </p>\r\n\r\n      {!gameOver && tentativas > 0 && (\r\n        <div className=\"forca-visual\">\r\n          <div className=\"forca\">\r\n            {tentativas < 6 && <div className=\"cabeca boneco\"></div>}\r\n            {tentativas < 5 && <div className=\"corpo boneco\"></div>}\r\n            {tentativas < 4 && <div className=\"braco-esquerdo boneco\"></div>}\r\n            {tentativas < 3 && <div className=\"braco-direito boneco\"></div>}\r\n            {tentativas < 2 && <div className=\"perna-esquerda boneco\"></div>}\r\n            {tentativas < 1 && <div className=\"perna-direita boneco\"></div>}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <p className=\"word\">{palavraOculta}</p>\r\n      <p className=\"letras-tentadas\">\r\n        Letras tentadas: <span>{letrasTentadas.join(\", \")}</span>\r\n      </p>\r\n\r\n      {!gameOver && tentativas > 0 && (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            ref={inputRef}\r\n            maxLength=\"1\"\r\n            placeholder=\"Digite uma letra\"\r\n            className=\"input-letter\"\r\n            onKeyDown={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                handleTentativa();\r\n              }\r\n            }}\r\n          />\r\n          <button onClick={handleTentativa}>Tentar</button>\r\n        </>\r\n      )}\r\n\r\n      <button\r\n        id={!gameOver ? \"desistir\" : null}\r\n        onClick={gameOver ? handleReset : () => {\r\n            setGameOver(true);\r\n            setMensagem(\"\");\r\n          }}\r\n      >\r\n        {gameOver ? \"Tentar novamente\" : \"Desistir desta palavra\"}\r\n      </button>\r\n\r\n      <p className=\"message\">{mensagem}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}